export const enUS = {
  // Login
  login: {
    title: 'WMF Corp',
    subtitle: 'Credit Management System',
    signIn: 'Sign In',
    username: 'Username',
    password: 'Password',
    enterUsername: 'Enter your username',
    enterPassword: 'Enter your password',
    errors: {
      required: 'Please enter both username and password',
      apiNotAvailable: 'Electron API not available. Please restart the application.',
      loginFailed: 'Login failed',
      genericError: 'An error occurred. Please try again.',
    },
    footer: 'WMF Corp Â© 2025. All rights reserved.',
  },

  // Dashboard
  dashboard: {
    title: 'Dashboard',
    subtitle: 'Overview of credit line status',
    newDisbursement: 'New Disbursement',
    kpis: {
      totalCreditLimit: 'Total Credit Limit',
      availableLimit: 'Available Limit',
      utilized: 'utilized',
      outstandingBalance: 'Outstanding Balance',
      activePNs: 'active PNs',
      accumulatedInterest: 'Accumulated Interest',
      overduePNs: 'overdue PNs',
    },
    alerts: {
      overduePNs: 'Promissory Note(s) Overdue',
      reviewMessage: 'Review overdue promissory notes and take appropriate action.',
      viewDetails: 'View Details',
    },
    quickActions: {
      newDisbursement: 'New Disbursement',
      newDisbursementDesc: 'Create a new disbursement request',
      bankReconciliation: 'Bank Reconciliation',
      bankReconciliationDesc: 'Match transactions with PNs',
      viewReports: 'View Reports',
      viewReportsDesc: 'Detailed analysis and exports',
    },
    largestActivePNs: 'Largest Active Promissory Notes',
    viewAll: 'View All',
    request: 'Request:',
    due: 'Due:',
  },

  // Disbursements
  disbursements: {
    title: 'Disbursements',
    subtitle: 'Manage disbursement requests',
    newRequest: 'New Request',
    requestNumber: 'Request #',
    amount: 'Amount',
    date: 'Date',
    status: 'Status',
    actions: 'Actions',
    view: 'View',
    approve: 'Approve',
    reject: 'Reject',
    noRequests: 'No disbursement requests found',
    statuses: {
      pending: 'Pending',
      approved: 'Approved',
      disbursed: 'Disbursed',
      settled: 'Settled',
      cancelled: 'Cancelled',
    },
  },

  // Disbursement Detail
  disbursementDetail: {
    back: 'Back',
    title: 'Disbursement Request Details',
    approveAndGenerate: 'Approve & Generate PN',
    confirmApproval: 'Approve this disbursement and generate Promissory Note?',
    status: 'Status',
    requestedAmount: 'Requested Amount',
    requestDate: 'Request Date',
    requestInfo: 'Request Information',
    description: 'Description:',
    assetsToAcquire: 'Assets to be Acquired:',
    approvedBy: 'Approved By:',
    created: 'Created:',
    promissoryNote: 'Promissory Note',
    generateWireTransfer: 'Generate Wire Transfer Order',
    pnNumber: 'PN Number:',
    principalAmount: 'Principal Amount:',
    interestRate: 'Interest Rate:',
    perAnnum: 'per annum',
    dueDate: 'Due Date:',
    pnNotGenerated: 'Promissory Note not yet generated',
    generatePN: 'Generate Promissory Note',
    errors: {
      approvalFailed: 'Failed to approve disbursement',
      generationFailed: 'Failed to generate Promissory Note',
      wireTransferFailed: 'Failed to generate Wire Transfer Order',
    },
    success: {
      pnGenerated: 'Promissory Note generated successfully!',
      wireTransferGenerated: 'Wire Transfer Order generated successfully!',
    },
  },

  // Create Disbursement
  createDisbursement: {
    back: 'Back',
    title: 'New Disbursement Request',
    subtitle: 'Create a new disbursement request',
    details: 'Disbursement Details',
    requestedAmount: 'Requested Amount (USD)',
    requestDate: 'Request Date',
    description: 'Description (optional)',
    descriptionPlaceholder: 'Enter description or notes...',
    uploadPDF: 'Upload Signed PDF from Whole Max (optional)',
    clickToUpload: 'Click to upload PDF',
    assetsExtracted: 'Assets will be extracted automatically',
    pdfUploaded: 'PDF uploaded successfully',
    extractingAssets: 'Extracting assets...',
    remove: 'Remove',
    assetsToAcquire: 'Assets to be Acquired',
    extractedFromPDF: '(extracted from PDF)',
    addAsset: 'Add Asset',
    assetPlaceholder: 'Asset {num} (e.g., 2023 Honda Civic - VIN: 1HGBH41JXMN109186)',
    createRequest: 'Create Request',
    cancel: 'Cancel',
    errors: {
      invalidAmount: 'Please enter a valid amount',
      pdfOnly: 'Please upload a PDF file',
      uploadError: 'Error reading PDF file',
      creationFailed: 'An error occurred',
      extractionFailed: 'Could not extract assets from PDF. Please add them manually.',
    },
  },

  // Bank Reconciliation
  bankReconciliation: {
    title: 'Bank Reconciliation',
    subtitle: 'Match bank transactions with promissory notes',
    importTransaction: 'Import Transaction',
    totalTransactions: 'Total Transactions',
    matched: 'Matched',
    unmatched: 'Unmatched',
    amount: 'Amount:',
    showLabel: 'Show:',
    allTransactions: 'All Transactions',
    unmatchedOnly: 'Unmatched Only',
    matchedOnly: 'Matched Only',
    date: 'Date',
    descriptionLabel: 'Description',
    reference: 'Reference',
    statusLabel: 'Status',
    matchedTo: 'Matched To',
    actionsLabel: 'Actions',
    match: 'Match',
    unmatch: 'Unmatch',
    loading: 'Loading transactions...',
    noTransactions: 'No transactions found. Import bank transactions to start reconciling.',
    confirmUnmatch: 'Unmatch this transaction?',
    suggestedMatches: 'Suggested Matches',
    request: 'Request:',
    sameDay: 'Same day',
    daysDifference: 'day(s) difference',
    importModal: {
      title: 'Import Bank Transaction',
      transactionDate: 'Transaction Date',
      amount: 'Amount (USD)',
      description: 'Description (optional)',
      descriptionPlaceholder: 'Transaction description',
      reference: 'Reference (optional)',
      referencePlaceholder: 'Check number or reference',
      import: 'Import',
      cancel: 'Cancel',
    },
    errors: {
      importFailed: 'Failed to import transaction',
      matchFailed: 'Failed to match transaction',
      unmatchFailed: 'Failed to unmatch transaction',
    },
  },

  // Settings
  settings: {
    title: 'Settings',
    subtitle: 'Configure credit line parameters',
    saveChanges: 'Save Changes',
    creditLineParams: 'Credit Line Parameters',
    totalCreditLimit: 'Total Credit Limit (USD)',
    interestRate: 'Annual Interest Rate (%)',
    dayBasis: 'Day Basis',
    defaultDueDays: 'Default Due Days',
    pnNumberFormat: 'PN Number Format',
    lenderInfo: 'Lender Information (WMF Corp)',
    borrowerInfo: 'Borrower Information (Whole Max)',
    name: 'Name',
    taxId: 'Tax ID',
    address: 'Address',
    jurisdiction: 'Jurisdiction',
    customization: 'Customization',
    customizationDesc: 'Customize colors and appearance of the system',
    primaryColor: 'Primary Color',
    lightColor: 'Light Accent Color',
    resetColors: 'Reset to Default Colors',
    previewTheme: 'Theme Preview',
    database: 'Database',
    backupManagement: 'Backup Management',
    createBackup: 'Create Backup',
    viewBackups: 'View Backups',
    hideBackups: 'Hide Backups',
    availableBackups: 'Available Backups',
    size: 'Size',
    restore: 'Restore',
    noBackups: 'No backups available',
    confirmRestore: 'Restore this backup? The application will restart.',
    success: {
      settingsSaved: 'Settings saved successfully',
      backupCreated: 'Backup created successfully',
      backupRestored: 'Backup restored successfully',
      colorsReset: 'Colors reset to default',
    },
    errors: {
      saveFailed: 'Failed to save settings',
      backupFailed: 'Failed to create backup',
      restoreFailed: 'Failed to restore backup',
    },
  },

  // Common
  common: {
    loading: 'Loading...',
    save: 'Save',
    cancel: 'Cancel',
    delete: 'Delete',
    edit: 'Edit',
    view: 'View',
    close: 'Close',
    confirm: 'Confirm',
    yes: 'Yes',
    no: 'No',
    search: 'Search',
    filter: 'Filter',
    export: 'Export',
    import: 'Import',
    download: 'Download',
    upload: 'Upload',
    actions: 'Actions',
    status: 'Status',
    date: 'Date',
    amount: 'Amount',
    description: 'Description',
    required: 'Required',
    optional: 'Optional',
  },
}

export type TranslationKeys = typeof enUS

